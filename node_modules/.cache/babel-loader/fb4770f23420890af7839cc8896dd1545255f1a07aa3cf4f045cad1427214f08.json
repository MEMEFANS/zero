{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Administrator\\\\CascadeProjects\\\\AIMiner\\\\src\\\\components\\\\shared\\\\Notification.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/React.createContext(null);\nexport const NotificationTypes = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  INFO: 'info',\n  WARNING: 'warning'\n};\nconst NotificationIcon = ({\n  type\n}) => {\n  const icons = {\n    success: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"w-6 h-6 text-green-500\",\n      fill: \"none\",\n      stroke: \"currentColor\",\n      viewBox: \"0 0 24 24\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"2\",\n        d: \"M5 13l4 4L19 7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this),\n    error: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"w-6 h-6 text-red-500\",\n      fill: \"none\",\n      stroke: \"currentColor\",\n      viewBox: \"0 0 24 24\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"2\",\n        d: \"M6 18L18 6M6 6l12 12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this),\n    info: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"w-6 h-6 text-blue-500\",\n      fill: \"none\",\n      stroke: \"currentColor\",\n      viewBox: \"0 0 24 24\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"2\",\n        d: \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this),\n    warning: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"w-6 h-6 text-yellow-500\",\n      fill: \"none\",\n      stroke: \"currentColor\",\n      viewBox: \"0 0 24 24\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"2\",\n        d: \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  };\n  return icons[type] || icons.info;\n};\n_c = NotificationIcon;\nconst NotificationItem = ({\n  type,\n  message,\n  onClose\n}) => {\n  const bgColors = {\n    success: 'bg-green-500/10',\n    error: 'bg-red-500/10',\n    info: 'bg-blue-500/10',\n    warning: 'bg-yellow-500/10'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${bgColors[type]} rounded-lg p-4 mb-2 flex items-start`,\n    children: [/*#__PURE__*/_jsxDEV(NotificationIcon, {\n      type: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-3 flex-1\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-white\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      className: \"ml-4 text-gray-400 hover:text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-4 h-4\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: \"2\",\n          d: \"M6 18L18 6M6 6l12 12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c2 = NotificationItem;\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const addNotification = useCallback((type, message, duration = 5000) => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, {\n      id,\n      type,\n      message\n    }]);\n    if (duration > 0) {\n      setTimeout(() => {\n        removeNotification(id);\n      }, duration);\n    }\n  }, []);\n  const removeNotification = useCallback(id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  }, []);\n  const contextValue = {\n    notifications,\n    addNotification,\n    removeNotification\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: contextValue,\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-4 right-4 z-50 w-72 space-y-2\",\n      children: notifications.map(({\n        id,\n        type,\n        message\n      }) => /*#__PURE__*/_jsxDEV(NotificationItem, {\n        type: type,\n        message: message,\n        onClose: () => removeNotification(id)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationProvider, \"IucX5uWvAbdKPMD9oa4Idz5AvMc=\");\n_c3 = NotificationProvider;\nNotificationProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport const useNotification = () => {\n  _s2();\n  const context = React.useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n_s2(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default NotificationProvider;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"NotificationIcon\");\n$RefreshReg$(_c2, \"NotificationItem\");\n$RefreshReg$(_c3, \"NotificationProvider\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","PropTypes","jsxDEV","_jsxDEV","NotificationContext","createContext","NotificationTypes","SUCCESS","ERROR","INFO","WARNING","NotificationIcon","type","icons","success","className","fill","stroke","viewBox","children","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","error","info","warning","_c","NotificationItem","message","onClose","bgColors","onClick","_c2","NotificationProvider","_s","notifications","setNotifications","addNotification","duration","id","Date","now","prev","setTimeout","removeNotification","filter","notification","contextValue","Provider","value","map","_c3","propTypes","node","isRequired","useNotification","_s2","context","useContext","Error","$RefreshReg$"],"sources":["c:/Users/Administrator/CascadeProjects/AIMiner/src/components/shared/Notification.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nconst NotificationContext = React.createContext(null);\n\nexport const NotificationTypes = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  INFO: 'info',\n  WARNING: 'warning'\n};\n\nconst NotificationIcon = ({ type }) => {\n  const icons = {\n    success: (\n      <svg className=\"w-6 h-6 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\n      </svg>\n    ),\n    error: (\n      <svg className=\"w-6 h-6 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    ),\n    info: (\n      <svg className=\"w-6 h-6 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n    ),\n    warning: (\n      <svg className=\"w-6 h-6 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n      </svg>\n    )\n  };\n\n  return icons[type] || icons.info;\n};\n\nconst NotificationItem = ({ type, message, onClose }) => {\n  const bgColors = {\n    success: 'bg-green-500/10',\n    error: 'bg-red-500/10',\n    info: 'bg-blue-500/10',\n    warning: 'bg-yellow-500/10'\n  };\n\n  return (\n    <div className={`${bgColors[type]} rounded-lg p-4 mb-2 flex items-start`}>\n      <NotificationIcon type={type} />\n      <div className=\"ml-3 flex-1\">\n        <p className=\"text-sm text-white\">{message}</p>\n      </div>\n      <button\n        onClick={onClose}\n        className=\"ml-4 text-gray-400 hover:text-white\"\n      >\n        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  const addNotification = useCallback((type, message, duration = 5000) => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, { id, type, message }]);\n\n    if (duration > 0) {\n      setTimeout(() => {\n        removeNotification(id);\n      }, duration);\n    }\n  }, []);\n\n  const removeNotification = useCallback((id) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  }, []);\n\n  const contextValue = {\n    notifications,\n    addNotification,\n    removeNotification\n  };\n\n  return (\n    <NotificationContext.Provider value={contextValue}>\n      {children}\n      <div className=\"fixed top-4 right-4 z-50 w-72 space-y-2\">\n        {notifications.map(({ id, type, message }) => (\n          <NotificationItem\n            key={id}\n            type={type}\n            message={message}\n            onClose={() => removeNotification(id)}\n          />\n        ))}\n      </div>\n    </NotificationContext.Provider>\n  );\n};\n\nNotificationProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport const useNotification = () => {\n  const context = React.useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n\nexport default NotificationProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}